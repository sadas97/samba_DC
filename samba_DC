#!/bin/bash

#Check if user is root
if [ "$EUID" == 0 ]; then

    printf "\nBefore you run this script make sure\n- you have set a static IP adress for your DC\n- your DC correctly resolves "\
    "fully-qualified domain name and short hostname (in /etc/hosts)\n- your DC has the AD DNS domain set in the 'search' "\
    "parameter and the IP of the DC in the 'nameserver' parameter of the /etc/resolv.conf file\nIn case of domain controller"\
    "replication\n- Synch idmap.ldb from you PDC by copying it into the folder where this script is located"

    printf "Are these conditions met? y/n\n"
    ConfirmReset=1
    while [ "${ConfirmReset}" == 1 ]; do
	if [ -z "${ConfirmMessage}" ]; then
	    ConfirmMessage=1
	elif [ "${ConfirmMessage}" ]; then
	    echo "Must enter y or n"
	fi

	read -p ">" ConfirmChoice

	if [ "${ConfirmChoice}" == y ] || [ "${ConfirmChoice}" == n ]; then 
	    ConfirmReset=0
	fi
    done

    if [ "${ConfirmChoice}" == n ]; then
	echo "After you finish these steps run the script again"
	exit 0
    fi

#Domain controller config choice
    printf "Choose your configuration\n1 - Configure as Primary domain controller\n2 - Replicate domain controller\n"
    ChoiceReset=1

    while [ "${ChoiceReset}" == 1 ]; do
	if [ -z "${ConfMessage}" ]; then
	    ConfMessage=1
	elif [ "${ConfMessage}" ]; then
	    echo "Must enter 1 or 2"
	fi

	read -p ">" ConfChoice

	if [ "${ConfChoice}" == 1 ] || [ "${ConfChoice}" == 2 ]; then 
	    ChoiceReset=0
	fi
    done

#Installing needed packages and removing config file (it will be created when provisioning/joining domain)
    DEBIAN_FRONTEND=noninteractive apt -yq install acl attr samba samba-dsdb-modules samba-vfs-modules winbind libpam-winbind libnss-winbind libpam-krb5 krb5-config krb5-user dnsutils resolvconf rsync
    rm /etc/samba/smb.conf



#Getting varibles for krb5 config file and domain join or for domain provision
	while [ -z "${KerberosRealm}" ]; do
	    if [ -z "${KRBMessage}" ]; then
	        KRBMessage=1
	    elif [ "${KRBMessage}" ]; then
		echo "Kerberos realm must be filled"
	    fi
	    read -p "Enter Kerberos realm:" KerberosRealm
	done

	while [ -z "${DomainName}" ]; do
	    if [ -z "${DNMessage}" ]; then
	        DNMessage=1
	    elif [ "${DNMessage}" ]; then
	    echo "Domain name must be filled"
	    fi
	    read -p "Enter NetBios domain name (In example.com -> EXAMPLE):" DomainName
	done


	while [ -z "${DCIP}" ]; do
	    if [ -z "${DomCIP}" ]; then
		ADPI=1
	    elif [ "${DomCIP}" ]; then
		echo "IP must be filled"
	    fi
	    read -p "Enter the local IP of this domain controller:" DCIP
	done




#Samba as Primary Controller
    if [ "${ConfChoice}" == 1 ]; then
#	echo "Choice 1"

#Getting admin password needed for provision
	while [ -z "${AdminPass}" ]; do
	    if [ -z "${ADPMessage}" ]; then
		ADPMessage=1
	    elif [ "${ADPMessage}" ]; then
		echo "Admin password must be filled"
	    fi

	    read -s -p "Enter domain administrator password:" AdminPass
	done

#Provisioning domain and replacing original krb5 config file with an auto-created one
	samba-tool domain provision --server-role=dc --use-rfc2307 --dns-backend=SAMBA_INTERNAL --realm="${KerberosRealm}" --domain="${DomainName}" --adminpass="${AdminPass}"
	cp /var/lib/samba/private/krb5.conf /etc/krb5.conf

	printf "nameserver ${DCIP}\nsearch ${KerberosRealm}\n" > /etc/resolvconf/resolv.conf.d/head
	systemctl restart resolvconf

	pkill smbd
	pkill winbindd
	pkill nmbd


#Starting Samba service
	samba





#Samba DC replicant
    elif [ "${ConfChoice}" == 2 ]; then
#	echo "Choice 2"

	

	while [ -z "${PDCIP}" ]; do
	    if [ -z "${PDCIPMessage}" ]; then
		PDCIPMessage=1
	    elif [ "${PDCIPMessage}" ]; then
		echo "IP must be filled"
	    fi
	    read -p "Enter the IP of the primary domain controller:" PDCIP
	done


	printf "[libdefaults]\ndns_lookup_realm = false\ndns_lookup_kdc = true\ndefault_realm = ${KerberosRealm^^}" > /etc/krb5.conf
	printf "Join to domain using\n1 - Username and password (using administrator account)\n2 - Kerberos\n"

	printf "nameserver ${PDCIP}\nsearch ${KerberosRealm}\n" > /etc/resolvconf/resolv.conf.d/head
	systemctl restart resolvconf

	ChoiceReset=1
	while [ "${ChoiceReset}" == 1 ]; do
	    if [ -z "${JoinConfMessage}" ]; then
		JoinConfMessage=1
	    elif [ "${JoinConfMessage}" ]; then
		echo "Must enter 1 or 2"
	    fi

	    read -p ">" JoinChoice

	    if [ "${JoinChoice}" == 1 ] || [ "${JoinChoice}" == 2 ]; then 
		ChoiceReset=0
	    fi
	done

	if [ "${JoinChoice}" == 1 ]; then
	    echo "JoinChoice 1"
	    samba-tool domain join ${KerberosRealm} DC -U"${DomainName^^}/administrator"
	elif [ "${JoinChoice}" == 2 ]; then
	    echo "JoinChoice 2"
	    kinit administrator
	    samba-tool domain join ${KerberosRealm} DC -k yes
	fi

	

	printf "Is PDC a\n1 - Windows server\n2 - Samba PDC\n"
	ChoiceReset=1
	while [ "${ChoiceReset}" == 1 ]; do
	    if [ -z "${SysvolConfMessage}" ]; then
		SysvolConfMessage=1
	    elif [ "${SysvolConfMessage}" ]; then
		echo "Must enter 1 or 2"
	    fi

	    read -p ">" SysvolChoice

	    if [ "${SysvolChoice}" == 1 ] || [ "${SysvolChoice}" == 2 ]; then 
		ChoiceReset=0
	    fi
	done

	if [ "${SysvolChoice}" == 1 ]; then
	    echo "Windows Server"
	    printf "To replicate the sysvol folder you must set up a task on your Primary domain controller\n"\
	    "-Click 'Start' / 'Run' / type 'taskschd.msc' and click 'OK'\n-Right-click to 'Task Scheduler'"\
	    "/ choose 'Create Task'\n-Enter a task name\n-Select 'Run whether user is logged on or not'\n"\
	    "-Navigate to the 'Triggers' tab and click the 'New' button\n-Select 'Daily', check\n"\
	    "'Repeat task every: 5 minutes' and 'for a duration of: 1 day'. Choose the time for the first start about"\
	    "15 min in the future, to have enough time for the remaining steps\n-Click 'OK' to save the trigger\n"\
	    "-Navigate to the 'Actions' tab and click the 'New' button\n-Choose 'Start a program' and fill the fields"\
	    "with following path/arguments:\n	Program/script:  C:\Windows\System32\Robocopy.exe\n"\
	    "	Add arguments (optional):  \\${DCIP}\SYSVOL\${KerberosRealm}\ C:\Windows\SYSVOL\domain\ /mir /sec\n"\
	    "-Click 'OK' to save the action\n-Save the task with 'OK'\n Restart the File Replication Service\n"\
	    "-'Start' / 'Run' / enter 'services.msc' and click 'OK'\n-Restart the 'File Replication Service'"
	





	elif [ "${SysvolChoice}" == 2 ]; then
	    echo "Samba DC"

	    while [ -z "${SysvolPass}" ]; do
		if [ -z "${SysvolPassPMessage}" ]; then
		    SysvolPassPMessage=1
	        elif [ "${SysvolPassMessage}" ]; then
		    echo "Sysvol password must be filled"
		fi
		read -s -p "Enter Sysvol replication password:" SysvolPass
	    done



	    idmapDir="$(dirname $0)/idmap.ldb"
	    cp ${idmapDir} /var/lib/samba/private/idmap.ldb
	    net cache flush

	    printf "${SysvolPass}" > /var/lib/samba/rsyncd-sysvol.secret
	    chmod 600 /var/lib/samba/rsyncd-sysvol.secret
	    if [ -e /var/spool/cron/crontab/root ]; then
		crontab -l > tmpcron
	    fi
	    printf "\n*/5 * * * * rsync -XAavz --delete-after --password-file=/var/lib/samba/rsyncd-sysvol.secret rsync://sysvol-replication@${PDCIP}/SysVol/ /var/lib/samba/sysvol/\n" >> tmpcron
	    crontab tmpcron
	    rm tmpcron

	    samba-tool ntacl sysvolreset
	fi

	pkill smbd
	pkill winbindd
	pkill nmbd

#Starting Samba service
	samba

    fi
else
    echo "Script must be started as root"
fi

exit 0


#Rsync should ask for username as well
